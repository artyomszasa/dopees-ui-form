export function wrapEvent(originalEvent, init) {
  let type;
  let opts;

  if ('string' === typeof init) {
    type = `${init}-${originalEvent.type}`;
    opts = {
      bubbles: true,
      cancelable: originalEvent.cancelable,
      composed: true
    };
  } else if (init) {
    type = init.prefix ? `${init.prefix}-${originalEvent.type}` : originalEvent.type;
    opts = {
      bubbles: undefined === init.bubbles ? true : init.bubbles,
      cancelable: undefined === init.cancellable ? originalEvent.cancelable : init.cancellable,
      composed: undefined === init.composed ? true : init.composed
    };
  } else {
    type = originalEvent.type;
    opts = {
      bubbles: true,
      cancelable: originalEvent.cancelable,
      composed: true
    };
  }

  opts.detail = originalEvent;
  return new CustomEvent(type, opts);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsT0FBTSxTQUFVLFNBQVYsQ0FBcUMsYUFBckMsRUFBdUQsSUFBdkQsRUFBa0Y7QUFDdEYsTUFBSSxJQUFKO0FBQ0EsTUFBSSxJQUFKOztBQUNBLE1BQUksYUFBYSxPQUFPLElBQXhCLEVBQThCO0FBQzVCLElBQUEsSUFBSSxHQUFHLEdBQUcsSUFBSSxJQUFJLGFBQWEsQ0FBQyxJQUFJLEVBQXBDO0FBQ0EsSUFBQSxJQUFJLEdBQUc7QUFDTCxNQUFBLE9BQU8sRUFBRSxJQURKO0FBRUwsTUFBQSxVQUFVLEVBQUUsYUFBYSxDQUFDLFVBRnJCO0FBR0wsTUFBQSxRQUFRLEVBQUU7QUFITCxLQUFQO0FBS0QsR0FQRCxNQU9PLElBQUksSUFBSixFQUFVO0FBQ2YsSUFBQSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQUwsR0FBYyxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksYUFBYSxDQUFDLElBQUksRUFBbEQsR0FBdUQsYUFBYSxDQUFDLElBQTVFO0FBQ0EsSUFBQSxJQUFJLEdBQUc7QUFDTCxNQUFBLE9BQU8sRUFBRSxTQUFTLEtBQUssSUFBSSxDQUFDLE9BQW5CLEdBQTZCLElBQTdCLEdBQW9DLElBQUksQ0FBQyxPQUQ3QztBQUVMLE1BQUEsVUFBVSxFQUFFLFNBQVMsS0FBSyxJQUFJLENBQUMsV0FBbkIsR0FBaUMsYUFBYSxDQUFDLFVBQS9DLEdBQTRELElBQUksQ0FBQyxXQUZ4RTtBQUdMLE1BQUEsUUFBUSxFQUFFLFNBQVMsS0FBSyxJQUFJLENBQUMsUUFBbkIsR0FBOEIsSUFBOUIsR0FBcUMsSUFBSSxDQUFDO0FBSC9DLEtBQVA7QUFLRCxHQVBNLE1BT0E7QUFDTCxJQUFBLElBQUksR0FBRyxhQUFhLENBQUMsSUFBckI7QUFDQSxJQUFBLElBQUksR0FBRztBQUNMLE1BQUEsT0FBTyxFQUFFLElBREo7QUFFTCxNQUFBLFVBQVUsRUFBRSxhQUFhLENBQUMsVUFGckI7QUFHTCxNQUFBLFFBQVEsRUFBRTtBQUhMLEtBQVA7QUFLRDs7QUFDRCxFQUFBLElBQUksQ0FBQyxNQUFMLEdBQWMsYUFBZDtBQUNBLFNBQU8sSUFBSSxXQUFKLENBQW1CLElBQW5CLEVBQXlCLElBQXpCLENBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgQ3RvcjxUPiB7XG4gIG5ldyAoLi4uYXJnczogYW55W10pOiBUO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdyYXBFdmVudEluaXQge1xuICBwcmVmaXg/OiBzdHJpbmcsXG4gIGJ1YmJsZXM/OiBib29sZWFuO1xuICBjYW5jZWxsYWJsZT86IGJvb2xlYW47XG4gIGNvbXBvc2VkPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBFdmVudDxFIGV4dGVuZHMgRXZlbnQ+KG9yaWdpbmFsRXZlbnQ6IEUsIGluaXQ/OiBzdHJpbmd8V3JhcEV2ZW50SW5pdCkge1xuICBsZXQgdHlwZTogc3RyaW5nO1xuICBsZXQgb3B0czogQ3VzdG9tRXZlbnRJbml0O1xuICBpZiAoJ3N0cmluZycgPT09IHR5cGVvZiBpbml0KSB7XG4gICAgdHlwZSA9IGAke2luaXR9LSR7b3JpZ2luYWxFdmVudC50eXBlfWA7XG4gICAgb3B0cyA9IHtcbiAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICBjYW5jZWxhYmxlOiBvcmlnaW5hbEV2ZW50LmNhbmNlbGFibGUsXG4gICAgICBjb21wb3NlZDogdHJ1ZVxuICAgIH07XG4gIH0gZWxzZSBpZiAoaW5pdCkge1xuICAgIHR5cGUgPSBpbml0LnByZWZpeCA/IGAke2luaXQucHJlZml4fS0ke29yaWdpbmFsRXZlbnQudHlwZX1gIDogb3JpZ2luYWxFdmVudC50eXBlO1xuICAgIG9wdHMgPSB7XG4gICAgICBidWJibGVzOiB1bmRlZmluZWQgPT09IGluaXQuYnViYmxlcyA/IHRydWUgOiBpbml0LmJ1YmJsZXMsXG4gICAgICBjYW5jZWxhYmxlOiB1bmRlZmluZWQgPT09IGluaXQuY2FuY2VsbGFibGUgPyBvcmlnaW5hbEV2ZW50LmNhbmNlbGFibGUgOiBpbml0LmNhbmNlbGxhYmxlLFxuICAgICAgY29tcG9zZWQ6IHVuZGVmaW5lZCA9PT0gaW5pdC5jb21wb3NlZCA/IHRydWUgOiBpbml0LmNvbXBvc2VkXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0eXBlID0gb3JpZ2luYWxFdmVudC50eXBlO1xuICAgIG9wdHMgPSB7XG4gICAgICBidWJibGVzOiB0cnVlLFxuICAgICAgY2FuY2VsYWJsZTogb3JpZ2luYWxFdmVudC5jYW5jZWxhYmxlLFxuICAgICAgY29tcG9zZWQ6IHRydWVcbiAgICB9O1xuICB9XG4gIG9wdHMuZGV0YWlsID0gb3JpZ2luYWxFdmVudDtcbiAgcmV0dXJuIG5ldyBDdXN0b21FdmVudDxFPih0eXBlLCBvcHRzKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9